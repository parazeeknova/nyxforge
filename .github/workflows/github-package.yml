name: Publish to GitHub Packages

on:
  push:
    branches: [master]

jobs:
  publish:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --tags origin
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          registry-url: https://npm.pkg.github.com
          scope: '@parazeeknova'

      - name: Wait for NPM package
        run: |
          echo "Waiting for NPM package to be available..."
          timeout=600  # 10 minutes
          interval=30  # 30 seconds
          elapsed=0
          
          while [ $elapsed -lt $timeout ]; do
            if npm view nyxforge version 2>/dev/null; then
              echo "Package found on NPM!"
              exit 0
            fi
            sleep $interval
            elapsed=$((elapsed + interval))
            echo "Still waiting... ($elapsed seconds elapsed)"
          done
          
          echo "Timeout waiting for NPM package"
          exit 1

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@parazeeknova'

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10.5.2
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build CLI
        run: npx tsup

      - name: Copy README
        run: cp README.md dist/

      - name: Publish to GitHub Packages
        run: |
          # Get the version from the latest git tag
          NPM_VERSION=$(git describe --tags --abbrev=0 | sed 's/v//')
          echo "Publishing version $NPM_VERSION to GitHub Packages"
          
          # Create temporary package.json for GitHub Packages
          cp package.json package.json.tmp
          
          # Update package.json for GitHub Packages
          jq --arg version "$NPM_VERSION" '.name = "@parazeeknova/nyxforge" | .private = false | .version = $version | .publishConfig.registry = "https://npm.pkg.github.com"' package.json.tmp > package.json
          
          # Publish package
          npm publish
          
          # Restore original package.json
          mv package.json.tmp package.json
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
